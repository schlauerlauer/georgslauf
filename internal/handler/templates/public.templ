package templates

import (
	"georgslauf/internal/db"
	"georgslauf/md"
	"georgslauf/session"
	"strconv"
	"time"
)

type HostParam struct {
	ID   int64
	Name string
}

templ Home(htmxRequest bool, user *session.UserData, schedule []db.Schedule, home md.MdData, host HostParam) {
	@base(htmxRequest, user, -1, false) {
		<div class="mt-9 mx-auto px-3 max-w-screen-lg">
			<article class="prose w-full mx-auto px-3 max-w-screen-lg">
				@templ.Raw(string(home.Intro))
			</article>
			// <span class="align-middle text-lg icon-[mdi--checkbox-marked-circle]"></span>
			if len(schedule) > 0 {
				// TODO lines not connecting
				<ul class="my-16 timeline timeline-vertical">
					for _, scheduleEntry := range schedule {
						<li>
							if scheduleEntry.End.Valid {
								<div class="timeline-start">
									{ time.Unix(scheduleEntry.Start, 0).Format("15:04") }
									- { time.Unix(scheduleEntry.End.Int64, 0).Format("15:04") }
								</div>
							} else {
								<div class="timeline-start">
									{ time.Unix(scheduleEntry.Start, 0).Format("15:04") }
								</div>
							}
							<div class="timeline-middle">
								<span class="align-middle text-lg icon-[mdi--checkbox-blank-circle]"></span>
							</div>
							<div class="timeline-end timeline-box">{ scheduleEntry.Name }</div>
							<hr/>
						</li>
					}
				</ul>
			}
			<div class="my-6 flex gap-x-2 items-center justify-end">
				<label class="avatar">
					<div class="w-8">
						<img
							src={ "/icon/tribe/" + strconv.FormatInt(host.ID, 10) }
						/>
					</div>
				</label>
				<p>{ host.Name }</p>
			</div>
		</div>
	}
}
