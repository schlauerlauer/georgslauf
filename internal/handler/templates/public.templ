package templates

import (
	"georgslauf/internal/db"
	"georgslauf/md"
	"georgslauf/session"
	"strconv"
	"time"
)

type HostParam struct {
	ID   int64
	Name string
}

templ Home(htmxRequest bool, user *session.UserData, schedule []db.Schedule, home md.MdData, host HostParam) {
	@base(htmxRequest, user, -1, false) {
		<div class="mt-9 mx-auto px-3 max-w-screen-lg">
			<div class="px-3 mb-6 flex justify-between items-center lg:flex-row flex-col">
				<h2 class="text-2xl font-bold">{ home.Headline }</h2>
				<div class="my-6 flex gap-x-2 items-center justify-end">
					<label class="avatar">
						<div class="w-8">
							<img
								src={ "/icon/tribe/" + strconv.FormatInt(host.ID, 10) }
							/>
						</div>
					</label>
					<p>{ host.Name }</p>
				</div>
			</div>
			<article class="prose w-full mx-auto px-3 max-w-screen-lg">
				@templ.Raw(string(home.Intro))
			</article>
			// <span class="align-middle text-lg icon-[mdi--checkbox-marked-circle]"></span>
			if len(schedule) > 0 {
				<div class="my-16 max-w-screen-md">
					<ul class="timeline timeline-vertical ">
						for idx, scheduleEntry := range schedule {
							<li>
								if idx > 0 {
									<hr/>
								}
								if scheduleEntry.End.Valid {
									<div class="timeline-start">
										{ time.Unix(scheduleEntry.Start, 0).Format("15:04") } - { time.Unix(scheduleEntry.End.Int64, 0).Format("15:04") }
									</div>
								} else {
									<div class="timeline-start">{ time.Unix(scheduleEntry.Start, 0).Format("15:04") }</div>
								}
								<div class="timeline-middle">
									<span class="align-middle h-5 w-5 icon-[mdi--checkbox-blank-circle]"></span>
								</div>
								<div class="timeline-end timeline-box">{ scheduleEntry.Name }</div>
								if idx < len(schedule)-1 {
									<hr/>
								}
							</li>
						}
					</ul>
				</div>
			}
			<div class="mt-9 flex justify-center">
				<img
					class="w-96"
					src="/res/icon.png"
				/>
			</div>
		</div>
	}
}
