package templates

import (
	"georgslauf/internal/db"
	"georgslauf/session"
	"strconv"
)

func max(a, b int64) int64 {
	if a > b {
		return a
	}
	return b
}

templ Dash(htmxRequest bool, user *session.UserData, tribeId int64, hasIcon bool, isEdit bool, isAdmin bool) {
	@base(htmxRequest, user, tribeId, hasIcon) {
		<div class="mt-6 mx-auto px-3 max-w-screen-lg">
			// TODO change active tab; push-url
			// hx-push-url="true"
			<div
				id="dash-tablist"
				role="tablist"
				class="tabs tabs-bordered"
				hx-swap="innerHTML"
				hx-target="#dash-tab"
				hx-include="#tribe-id"
			>
				if isEdit || isAdmin {
					<a role="tab" class="tab tab-active" hx-get="/dash/groups" hx-trigger="load once, click">Gruppen</a>
					<a role="tab" class="tab" hx-get="/dash/stations">Posten</a>
				}
			</div>
			<div id="dash-tab" class="pt-6"></div>
		</div>
	}
}

templ TribeRoleSelect(htmxRequest bool, user *session.UserData, tribes []db.GetTribesRow, csrf string) {
	@base(htmxRequest, user, -1, false) {
		<div class="mt-6 mx-auto px-3 max-w-screen-lg">
			<h1 class="text-xl">Stamm ausw√§hlen</h1>
			<div class="mt-6">
				<div class="overflow-x-auto max-w-screen-md mx-auto">
					<table class="table">
						<thead>
							<tr>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							for _, tribe := range tribes {
								<tr>
									<td>
										<div class="flex items-center gap-3">
											if tribe.Icon.Valid {
												<label class="avatar cursor-pointer">
													<div class="h-12 w-12">
														<img
															src={ "/icon/tribe/" + strconv.FormatInt(tribe.ID, 10) }
															alt={ tribe.Name + " Icon" }
														/>
													</div>
												</label>
											} else {
												<label class="avatar placeholder">
													<div class="mask mask-squircle bg-neutral text-neutral-content w-12 h-12">
														<span class="text-2xl icon-[uil--image]"></span>
													</div>
												</label>
											}
											<div>
												<div class="font-bold">{ tribe.Name }</div>
												<div class="text-sm opacity-50">{ tribe.Short.String }</div>
												<div class="text-sm opacity-50">{ tribe.Dpsg.String }</div>
											</div>
										</div>
									</td>
									<th>
										<form
											hx-post="/dash/join"
											hx-swap="main"
											hx-swap="innerHTML"
											hx-headers={ "{\"X-CSRF-Token\": \"" + csrf + "\"}" }
										>
											<input type="hidden" name="tribe" value={ strconv.FormatInt(tribe.ID, 10) }/>
											<button class="btn btn-primary">Beitreten</button>
										</form>
									</th>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
}
